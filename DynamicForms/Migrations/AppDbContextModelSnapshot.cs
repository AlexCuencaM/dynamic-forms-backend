// <auto-generated />
using System;
using DynamicForms.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DynamicForms.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DynamicForms.Models.Entities.Form", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("OptionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("DynamicForms.Models.Entities.FormAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("FormsAnswers");
                });

            modelBuilder.Entity("DynamicForms.Models.Entities.FormInput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FormId")
                        .HasColumnType("int");

                    b.Property<int>("FormTypeDataId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.HasIndex("FormTypeDataId");

                    b.ToTable("FormInputs");
                });

            modelBuilder.Entity("DynamicForms.Models.Entities.FormInputAnswers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FormAnswerId")
                        .HasColumnType("int");

                    b.Property<int>("FormTypeDataId")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Value")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("FormAnswerId");

                    b.HasIndex("FormTypeDataId");

                    b.ToTable("FormInputAnswers");
                });

            modelBuilder.Entity("DynamicForms.Models.Entities.FormTypeData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FormTypeData");
                });

            modelBuilder.Entity("DynamicForms.Models.Entities.FormAnswer", b =>
                {
                    b.HasOne("DynamicForms.Models.Entities.Form", "Form")
                        .WithMany("FormAnswers")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");
                });

            modelBuilder.Entity("DynamicForms.Models.Entities.FormInput", b =>
                {
                    b.HasOne("DynamicForms.Models.Entities.Form", null)
                        .WithMany("Inputs")
                        .HasForeignKey("FormId");

                    b.HasOne("DynamicForms.Models.Entities.FormTypeData", "FormTypeData")
                        .WithMany()
                        .HasForeignKey("FormTypeDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormTypeData");
                });

            modelBuilder.Entity("DynamicForms.Models.Entities.FormInputAnswers", b =>
                {
                    b.HasOne("DynamicForms.Models.Entities.FormAnswer", null)
                        .WithMany("InputAnswers")
                        .HasForeignKey("FormAnswerId");

                    b.HasOne("DynamicForms.Models.Entities.FormTypeData", "FormTypeData")
                        .WithMany()
                        .HasForeignKey("FormTypeDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormTypeData");
                });

            modelBuilder.Entity("DynamicForms.Models.Entities.Form", b =>
                {
                    b.Navigation("FormAnswers");

                    b.Navigation("Inputs");
                });

            modelBuilder.Entity("DynamicForms.Models.Entities.FormAnswer", b =>
                {
                    b.Navigation("InputAnswers");
                });
#pragma warning restore 612, 618
        }
    }
}
